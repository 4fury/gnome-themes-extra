debug {
  @if $variant == 'dark' { background-color: red; }
  @else { background-color: blue; }
}

* {
    engine: adwaita;
    padding: 0;
    background-clip: padding-box;
    -GtkToolButton-icon-spacing: 4;
    -GtkTextView-error-underline-color: $error_color;
    -GtkPaned-handle-size: 5;

    -GtkCheckButton-indicator-size: 16;
    -GtkCheckMenuItem-indicator-size: 12;

    /* The size for scrollbars. The slider is 2px smaller, but we keep it
     * up so that the whole area is sensitive to button presses for the
     * slider. The stepper button is larger in both directions, the slider
     * only in the width
     */

    -GtkScrolledWindow-scrollbar-spacing: 0;
    -GtkScrolledWindow-scrollbars-within-bevel: 1;

    -GtkToolItemGroup-expander-size: 11;
    -GtkExpander-expander-size: 11;
    -GtkTreeView-expander-size: 11;

    -GtkTreeView-horizontal-separator: 4;

    -GtkMenu-horizontal-padding: 0;
    -GtkMenu-vertical-padding: 0;

    -GtkWidget-link-color: $link_color;
    -GtkWidget-visited-link-color: $link_color;

    -GtkWidget-focus-padding: 2;
    -GtkWidget-focus-line-width: 1;
    -GtkWindow-resize-grip-width: 0;
    -GtkWindow-resize-grip-height: 0;   

    // We use the outline properties to signal the focus properties
    // to the adwaita engine: using real CSS properties is faster,
    // and we don't use any outlines for now.

    outline-color: transparentize($theme_fg_color, 0.3);
    outline-style: dashed;
    outline-offset: 2px;
}

/***************
 * Base States *
 ***************/

.background {
    color: $theme_fg_color;
    background-color: $theme_bg_color;
}

.background:backdrop {
    /* I want everything nice and flat in the unfocused window */
    text-shadow: none;
    icon-shadow: none;

    color: lighten($theme_fg_color,10%);
}

*:selected,
*:selected:focus {
    background-color: $theme_selected_bg_color;
    color: $theme_selected_fg_color;
}

*:selected:backdrop {
    background-color: $theme_selected_bg_color;
    color: $theme_selected_fg_color;
}

*:insensitive {
    background-color: $insensitive_bg_color;
    color: $insensitive_fg_color;
    border-color: lighten($borders,10%);
}

*:insensitive:backdrop {
    /* I want everything nice and flat in the unfocused window */
    text-shadow: none;
    icon-shadow: none;
    color: lighten($theme_fg_color,10%);
}

/* Apply effects to insensitive and prelit images */
*:insensitive {
    -gtk-image-effect: dim;
}

*:hover {
    -gtk-image-effect: highlight;
}
*:hover {
    -gtk-image-effect: highlight;
}

.gtkstyle-fallback {
    background-color: $theme_bg_color;
    color: $theme_fg_color;
}

.gtkstyle-fallback:prelight {
    background-color: lighten($theme_bg_color, 10%);
    color: $theme_fg_color;
}

.gtkstyle-fallback:active {
    background-color: darken($theme_bg_color, 10%);
    color: $theme_fg_color;
}

.gtkstyle-fallback:insensitive {
    background-color: $insensitive_bg_color;
    color: $insensitive_fg_color;
}

.gtkstyle-fallback:selected {
    background-color: $theme_selected_bg_color;
    color: $theme_selected_fg_color;
}

GtkImage,
GtkImage:insensitive,
GtkLabel,
GtkLabel:insensitive,
GtkBox,
GtkBox:insensitive,
GtkGrid,
GtkGrid:insensitive {
    background-color: transparent;
}

// spinner animation
@import 'spinner';

/****************
 * Text Entries *
 ****************/
 
.entry {
  padding: 4px;
  color: $theme_fg_color;
  border-radius: 3px;
  transition: all 200ms ease-out;
  border: 1px solid $borders;
  background-image: linear-gradient(to bottom,
                                      darken($theme_base_color,20%) 1%,
                                      darken($theme_base_color,10%) 10%,
                                      $theme_base_color
                                      );
  background-color: transparent;
  &:insensitive, &:backdrop:insensitive {
    color: $insensitive_fg_color;
    background-image: none;
    background-color: $insensitive_bg_color;
    box-shadow: inset 0 1px $borders_edge,
                0 1px $borders_edge; /* doesn't have margin to paint on :( */
  }
  &:focus {
    border-color: $theme_selected_bg_color;
    box-shadow: inset 0 0 2px 1px transparentize($theme_selected_bg_color,.5);
  }
  GtkLabel {
    text-shadow: 0 1px red;
  }  
}

.linked .entry {
  @extend .entry;
  &:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right-width: 0;
  }
  &:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

/***********
 * Buttons *
 ***********/

.button,
.toolbar .button.raised,
.toolbar .raised .button,
.toolbar GtkComboBox .button,
.spinbutton.vertical .button {
  border-radius: 3px;
  transition: all 200ms ease-out;
  padding: 2px 4px;
  background-color: transparent;
  background-image: linear-gradient(to bottom,
                                      lighten($theme_bg_color,10%),
                                      $theme_bg_color 40%,
                                      darken($theme_bg_color,10%)
                                      );
  border: 1px solid $borders;
  &:hover {
    background-image: linear-gradient(to bottom,
                                      lighten($theme_bg_color,15%),
                                      lighten($theme_bg_color,10%),
                                      $theme_bg_color);
  }
  &:active {
    background-image: linear-gradient(to bottom,
                                      darken($theme_bg_color,20%),
                                      darken($theme_bg_color,15%) 5%,
                                      darken($theme_bg_color,10%));
    box-shadow: inset 0 1px 2px $borders;
  }
  &:insensitive, &:backdrop:insensitive {
    background-image: linear-gradient(to bottom, transparent);
    color: $insensitive_fg_color;
  }
}

.linked .button {
  @extend .button;
  &:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right-width: 0;
  }
  &:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.header-bar .button {
  &.text-button {
    padding: 2px 8px;
  }
  &.image-button {
    padding: 4px;
  }
}

/**************
 * ComboBoxes *
 **************/
GtkComboBox {
  padding: 0;

  -GtkComboBox-arrow-scaling: 0.5;
  -GtkComboBox-shadow-type: none;
  .separator {
    /* always disable separators */
    -GtkWidget-wide-separators: true;
    -GtkWidget-horizontal-separator: 0;
    -GtkWidget-vertical-separator: 0;
  }
  &.combobox-entry .entry:first-child {
    border-radius: 3px 0 0 3px;
    border-right: 0;
  }
  &.combobox-entry .button:first-child {
    border-radius: 3px 0 0 3px;
  }
  &.combobox-entry .entry:last-child {
    border-radius: 0 3px 3px 0;
    border-left: 0;
  }
  &.combobox-entry .button:last-child {
    border-radius: 0 3px 3px 0;
  }
  .button {
    @extend .button;
    padding: 2px 4px;
  }
  
}

/***************
 * Header bars *
 ***************/
 
 .header-bar {
    border-width: 0 0 1px;
    border-style: solid;
    border-color: shade($borders, 0.90);
    border-radius: 5px 5px 0 0;
    
    background-color: none;
    background-image: linear-gradient(to bottom,
                                      lighten($theme_bg_color,2%),
                                      darken($theme_bg_color,5%));
    box-shadow: inset 0 -1px $theme_shade,
                inset 0 1px $borders_edge;
    padding: 6px;
}
