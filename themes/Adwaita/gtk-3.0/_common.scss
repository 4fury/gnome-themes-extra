* {
  engine: adwaita;
  padding: 0;
  background-clip: padding-box;
  -GtkToolButton-icon-spacing: 4;
  -GtkTextView-error-underline-color: $error_color;
  -GtkPaned-handle-size: 5;

  -GtkCheckButton-indicator-size: 16;
  -GtkCheckMenuItem-indicator-size: 12;

  // The size for scrollbars. The slider is 2px smaller, but we keep it
  // up so that the whole area is sensitive to button presses for the
  // slider. The stepper button is larger in both directions, the slider
  // only in the width

  -GtkScrolledWindow-scrollbar-spacing: 0;
  -GtkScrolledWindow-scrollbars-within-bevel: 1;

  -GtkToolItemGroup-expander-size: 11;
  -GtkExpander-expander-size: 11;
  -GtkTreeView-expander-size: 11;

  -GtkTreeView-horizontal-separator: 4;

  -GtkMenu-horizontal-padding: 0;
  -GtkMenu-vertical-padding: 0;

  -GtkWidget-link-color: $link_color;
  -GtkWidget-visited-link-color: $link_color;

  -GtkWidget-focus-padding: 2;
  -GtkWidget-focus-line-width: 1;
  -GtkWindow-resize-grip-width: 0;
  -GtkWindow-resize-grip-height: 0;   

  // We use the outline properties to signal the focus properties
  // to the adwaita engine: using real CSS properties is faster,
  // and we don't use any outlines for now.

  outline-color: transparentize($theme_fg_color, 0.3);
  outline-style: dashed;
  outline-offset: 2px;
}

/***************
 * Base States *
 ***************/

.background {
    color: $theme_fg_color;
    background-color: $theme_bg_color;
}

.background:backdrop {
    text-shadow: none;
    icon-shadow: none;

    color: lighten($theme_fg_color,10%);
}

/*
   These wildcard seems unavoidable, need to investigate.
   Wildcards are bad and troublesome, use them with care,
   or better, just don't.
   Everytime a wildcard is used a kitten dies, painfully.
*/

*:selected,
*:selected:focus {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
}

*:selected:backdrop {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
}


*:insensitive {
    -gtk-image-effect: dim;
}

*:hover {
    -gtk-image-effect: highlight;
}

.gtkstyle-fallback {
    background-color: $theme_bg_color;
    color: $theme_fg_color;
}

.gtkstyle-fallback:prelight {
    background-color: lighten($theme_bg_color, 10%);
    color: $theme_fg_color;
}

.gtkstyle-fallback:active {
    background-color: darken($theme_bg_color, 10%);
    color: $theme_fg_color;
}

.gtkstyle-fallback:insensitive {
    background-color: $_insensitive_bg_color;
    color: $_insensitive_fg_color;
}

.gtkstyle-fallback:selected {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
}

GtkImage,
GtkImage:insensitive,
GtkLabel,
GtkLabel:insensitive,
GtkBox,
GtkBox:insensitive,
GtkGrid,
GtkGrid:insensitive {
    background-color: transparent;
}

// spinner animation

@keyframes spin {
    to { -gtk-icon-transform: rotate(1turn); }
}

.spinner {
  background-image: none;
  background-color: blue;
  opacity: 0; // non spinning spinner makes no sense
  -gtk-icon-source: url("assets/spinner.svg");

  &:active {
    opacity: 1;
    animation: spin 1s linear infinite;
    &:insensitive {
      opacity: 0.5;
    }
  }
}

/****************
 * Text Entries *
 ****************/
 
.entry {
  padding: 4px;
  color: $theme_fg_color;
  border-radius: 3px;
  transition: all 200ms ease-out;
  border: 1px solid $borders_color;
  background-image: linear-gradient(to bottom,
                                      darken($theme_base_color,3%) 0%,
                                      $theme_base_color 90%
                                      );
  box-shadow: inset 0 2px 2px -2px $theme_shade,
              0 1px $borders_edge; /* not working */

  background-color: transparent; // this needs to be 'transparent'
                                 // if we need a flat bg, let's abuse a gradient

  &:insensitive {
    color: $_insensitive_fg_color;
    background-image: none;
    background-color: $_insensitive_bg_color;
    box-shadow: 0 1px $borders_edge; /* not working */
  }
  &:focus {
    border-color: $selected_bg_color;
    box-shadow: inset 0 2px 2px -2px transparentize(black,0.6),
                // focus indicator
                inset 0 0 2px 1px transparentize($selected_bg_color, 0.5),                0 1px $borders_edge; /* not working */
  }
  &:selected, &:backdrop:selected { 
    color: $selected_fg_color;
    background-color: $selected_bg_color;
  }
  &:backdrop {
    color: $_backdrop_fg_color;
    border-color: $_backdrop_borders_color;
    background-image: linear-gradient(to bottom, $_backdrop_base_color);
    box-shadow: none; // let's make it flat
  }
  &:backdrop:insensitive {
    color: $_backdrop_insensitive_color;
    background-image: linear-gradient(to bottom, $_backdrop_bg_color);
  }
  
  &.progressbar {
    margin: 1px;
    border-radius: 0;
    border-width: 0 0 2px;
    border-color: $selected_bg_color;
    border-style: solid;
    background-image: none;
    box-shadow: none;
  }
}

.linked .entry {
  &:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right-width: 0;
  }
  &:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}


/***********
 * Buttons *
 ***********/
//.button, let's try to keep stuff as simple as possible for now
//.toolbar .button.raised,
//.toolbar .raised .button,
//.toolbar GtkComboBox .button,
//.spinbutton.vertical .button {
.button {
  border-radius: 3px;
  transition: all 200ms ease-out;
  padding: 4px 6px;
  @include button(normal);
  &:hover {
    @include button(hover);
  }
  &:active {
    @include button(active);
  }
  &:backdrop {
    @include button(backdrop);
    &:active {
      @include button(backdrop-active);
    }
    &:insensitive {
      @include button(backdrop-insensitive);
    }
    &:insensitive:active {
      @include button(backdrop-insensitive-active);
    }
  }
  &:insensitive {
    @include button(insensitive);
    &:active {
      @include button(insensitive-active);
    }
  }
  
  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $selected_bg_color), 
                              (destructive-action, $destructive_color) {
    &.#{$b_type} {
      @include button(normal,$b_color, white, true); //FIXME: perhaps we should derive from bg color?
      &:hover {
        @include button(hover,$b_color, white, true);
      }
      &:active { 
        @include button(active,$b_color, white, true);
      }
      &:backdrop {
        @include button(backdrop,$b_color);
        &:insensitive { 
          @include button(backdrop-insensitive);
        }
      }
      &:insensitive {
        @include button(insensitive);
      }
    }
  }
}

GtkColorButton.button { // Uniform padding on the GtkColorButton.button
  padding: 4px;
}

/* menu/popover buttons */
.menuitem.button, {
  color: $theme_fg_color;
  background-color: transparent;
  background-image: none;
  border-color: transparent;
  border-image: none;
  border-style: none;
  box-shadow: none;
  &:active,
  &:insensitive,
  &:active:insensitive {
    @extend .menuitem.button; // override generic .button:*
  }
  &:backdrop,
  &:hover:backdrop,
  &:insensitive:backdrop,
  &:active:insensitive:backdrop,
  &:active:backdrop,
  &:active:hover:backdrop,
  &:active:selected:backdrop {
      text-shadow: none;
      icon-shadow: none;
      color: $_insensitive_fg_color;
      background-color: $_insensitive_bg_color;
      background-image: none;
      border: none;
      box-shadow: none;
  }
}

.linked .button, .linked .button:backdrop {
  border-radius: 0;
  border-right-width: 0;
  &:first-child {
    border-radius: 3px 0 0 3px;
  }
  &:last-child {
    border-radius: 0 3px 3px 0;
    border-right-width: 1px;
  }
  &:only-child {
    border-radius: 3px;
    border-right-width: 1px;
  }
}

.header-bar .button {
  &.text-button {
    padding: 6px 8px 5px; /* due to font metrics the image buttons 
                             are 1px shorter */
  }
  &.image-button {
    padding: 8px; 
  }
}


/*****************
 * GtkSpinButton *
 *****************/

.spinbutton {
  .button {
    background-image: none;
    border-width: 0 0 0 1px;
    border-color: transparentize($borders_color,0.7);
    border-radius: 0;
    box-shadow: none;
  //  padding-left: 6px;
  //  padding-right: 6px;
    &:insensitive {
      color: transparentize($_insensitive_fg_color,0.7);
    }
    &:active {
      box-shadow: inset 0 2px 3px -1px transparentize(black,0.8); 
    }
    &:backdrop {
      border-color: transparentize($_backdrop_borders_color,0.7);
    }
    &:backdrop:insensitive {
      border-width: 0 0 0 1px;
      color: transparentize($_backdrop_insensitive_color,0.7);
    }
  }
  &.vertical {
    .button {
      @include button(normal);
      &:first-child { border-radius: 3px 3px 0 0; }
      &:last-child { border-radius: 0 0 3px 3px; }
      &:active { @include button(active); }
      &:insensitive { @include button(insensitive); }
      &:backdrop { @include button(backdrop); }
      &:hover { @include button(hover); }
    }
    &.entry { border-radius: 0; border-width: 0 1px 0 1px;}
  }
}

/**************
 * ComboBoxes *
 **************/
GtkComboBox {
  padding: 0;

  -GtkComboBox-arrow-scaling: 0.5;
  -GtkComboBox-shadow-type: none;
  
  @include _button_text_shadow;

  &:insensitive { 
    color: $_insensitive_fg_color;
    text-shadow: none;
    icon-shadow: none;
  }
  &:backdrop { 
    color: $_backdrop_fg_color; 
    text-shadow: none;
    icon-shadow: none;
  }
  &:backdrop:insensitive { 
    color: transparentize($_backdrop_insensitive_color,0.5); 
  }
  
  .separator {
    // always disable separators
    -GtkWidget-wide-separators: true;
    -GtkWidget-horizontal-separator: 0;
    -GtkWidget-vertical-separator: 0;
  }
  &.combobox-entry .entry:first-child {
    border-radius: 3px 0 0 3px;
    border-right: 0;
  }
  &.combobox-entry .button:first-child {
    border-radius: 3px 0 0 3px;
  }
  &.combobox-entry .entry:last-child {
    border-radius: 0 3px 3px 0;
    border-left: 0;
  }
  &.combobox-entry .button:last-child {
    border-radius: 0 3px 3px 0;
  }
}

/***************
 * Header bars *
 ***************/
 
.header-bar {
  border-width: 0 0 1px; 
  border-style: solid;
  border-color: $borders_color;
  border-radius: 7px 7px 0 0;
  
  background-color: transparent;
  background-image: linear-gradient(to bottom,
                                    lighten($theme_bg_color,2%),
                                    darken($theme_bg_color,5%));
  box-shadow: inset 0 -1px transparentize($theme_shade,.4),
              inset 0 1px $borders_edge;
  padding: 6px;

  &:backdrop {
    border-color: $_backdrop_borders_color;
    background-color: $theme_bg_color;
    background-image: none;
    box-shadow: none;
  }
  
  .title {
    font: Bold;
    padding: 0px 12px;
  }
  .subtitle {
    font-size: 80%;
    padding: 0 12px;
  }
  & > GtkBox > .separator.vertical {
    -GtkWidget-wide-separators: 1;
    -GtkWidget-separator-width: 1px;
    border-width: 0 1px;
    border-image: linear-gradient(to bottom, 
                                  transparentize($borders_color,1),
                                  $borders_color 30%,
                                  $borders_color 70%,
                                  transparentize($borders_color,1) 100%)
                  0 1 / 0 1px stretch; //FIXME use a proper color
    &:backdrop {
      border-image: linear-gradient(to bottom, 
                                    transparentize($_backdrop_insensitive_color,
                                                   0.5))
                    0 1 / 1px 1px;  //FIXME use a proper color
    }
  }
  &.selection-mode {
    color: darken($selected_bg_color, 15%);
    text-shadow: 0 1px $theme_shade;
    background-image: linear-gradient(to bottom,
                                    lighten($selected_bg_color,5%),
                                    lighten($selected_bg_color,2%));
  }
}

.window-frame.tiled .header-bar {
  border-radius: 0; // FIXME doesn't work
}

/***************
 * Popovers   *
 ***************/

GtkPopover {
  border-radius: 5px;
  background-clip: border-box;
  /*
  background-color: @osd_popover_bg;
  */
  background-color: $theme_bg_color;

  border-color: darken($theme_bg_color, 30%);
  border-width: 1px;
  border-style: solid;

  box-shadow: 0 2px 3px $theme_shade;
  margin: 10px;
  padding: 2px;
  &:backdrop {
    box-shadow: none;
  }
  & > .list,
  & > .view,
  & > .toolbar {
    background-color: transparent;
  }
  .separator {
    font-size: 80%;
    font-weight: bold;
    color: transparentize($theme_fg_color,0.4);
    text-shadow: none;
    background-color: transparent;
    icon-shadow: none;
    border: 0;
  }
}

/*****************
 * Notebooks and *
 * Tabs          *
 *****************/

.notebook {
  padding: 0;
  border-style: solid;
  border-color: $borders_color;
  background-color: $theme_base_color;
  -GtkNotebook-initial-gap: 10;
  -GtkNotebook-arrow-spacing: 5;
  -GtkNotebook-tab-curvature: 0;
  -GtkNotebook-tab-overlap: 1;
  -GtkNotebook-has-tab-gap: false;
  -GtkWidget-focus-padding: 0;
  -GtkWidget-focus-line-width: 0;
  transition: all 200ms ease-out;
  &.frame { border-width: 1px; }
  &.header {
    background-color: darken($theme_bg_color,5%);
    box-shadow: inset 0 6px 3px -5px transparentize($theme_shade,0.35); //I want just a top shadow 
                                                                       //so negative spread
    border-width: 0px;
    &.frame {
      border: 1px solid $borders_color;
      &.top { border-bottom: none; };
      &.bottom { border-top: none; };
      &.right { border-left: none; };
      &.left { border-right: none; }; 
    }
  }
  tab {
    border-width: 0;
    background-color: transparent;
    $tab_indicator_size: 2px;
    $active_tab_indicator: $selected_bg_color;
    $prelight_tab_indicator: $borders_color;
    &.top, &.bottom { padding: 8px 20px; }; //horizontal tab sizing
    &.left, &.right { padding: 5px 20px; }; //vertical tab sizing
    &.top:hover { box-shadow: inset 0 (-$tab_indicator_size) $prelight_tab_indicator; };
    &.top:active { box-shadow: inset 0 (-$tab_indicator_size) $active_tab_indicator; };
    &.bottom:hover { box-shadow: inset 0 $tab_indicator_size $prelight_tab_indicator; };
    &.bottom:active { box-shadow: inset 0 $tab_indicator_size $active_tab_indicator; };
    &.right:hover { box-shadow: inset $tab_indicator_size 0 $prelight_tab_indicator; };
    &.right:active { box-shadow: inset $tab_indicator_size 0 $active_tab_indicator; };
    &.left:hover { box-shadow: inset (-$tab_indicator_size) 0 $prelight_tab_indicator; };
    &.left:active { box-shadow: inset (-$tab_indicator_size) 0 $active_tab_indicator; };
    //with backdrop in the mix this will explode we need smarter code

    GtkLabel { //tab text
      font-weight: bold;
      color: lighten($theme_fg_color,30%); //FIXME
      &.active-page { color: $theme_fg_color; } //active tab text
      &.prelight-page { color: lighten($theme_fg_color,15%); } //prelight tab text
    }
  }
}

/**************
 * Scrollbars *
 **************/

.scrollbar {
  background-image: none;
  border-style: solid;
  -GtkRange-trough-border: 0;
  -GtkScrollbar-has-backward-stepper: false;
  -GtkScrollbar-has-forward-stepper: false;
  -GtkRange-slider-width: 13;
  -GtkScrollbar-min-slider-length: 42; /* minimum size for the slider. sadly can't be in '.slider' where it belongs */

  -GtkRange-stepper-spacing: 0;
  -GtkRange-trough-under-steppers: 1;
  .button {
    border: none;
  }
  &.trough {
    background-color: darken($theme_bg_color, 5%);
    &:backdrop {
      background-color: transparent;
    }
  }
  &.slider {
    border-radius: 20px;
    border: 3px solid transparent; //margin :/
    background-color: darken($theme_bg_color, 30%);
    &:backdrop, &:insensitive {
      background-color: darken($theme_bg_color, 20%);
    }
    &:hover {
      background-color: darken($theme_bg_color, 40%);
    }
    &:prelight:active {
      background-color: $selected_bg_color;
    }
    &.fine-tune {
      border-width: 5px;
      &:prelight:active {
        background-color: $selected_bg_color;
      }
    }
  }
}

/**********
 * Frames *
 **********/
.frame {
  border: 1px solid $borders_color;
  padding: 0;
  &:backdrop { border-color: transparentize($borders_color,0.4); }
}

GtkScrolledWindow.frame {
  border-radius: 2px;
}

/**********************
 * Window Decorations *
 *********************/

.window-frame {
  border-radius: 7px 7px 0 0;
  /* lamefun trick to get rounded borders regardless of CSD use */
  border-width: 0px;    
  @if $variant == 'dark' { 
    box-shadow: 0 2px 10px 4px transparentize($wm_shadow, 0.4), 0 0 0 1px transparentize($wm_shadow,.2);
  }
  @else {
    box-shadow: 0 2px 10px 4px transparentize($wm_shadow, 0.4), 0 0 0 1px transparentize($wm_shadow,.5);
  }

  /* this is used for the resize cursor area */
  margin: 10px;

  &:backdrop {
    box-shadow: 0 3px 6px 2px transparentize($wm_shadow, 0.4), 0 0 0 1px transparentize($wm_shadow,.5);
  }
  &.tiled {
    border-radius: 0;
    background-color: $theme_bg_color;
  }
}

// Window Close button
.button.titlebutton {
  padding: 8px;
  border-color: transparent;
  background-image: none;
  box-shadow: none;
  &:hover {
    @include button(normal);
  }
  &:active {
    @include button(active);
  }
  &:backdrop {
    @include button(backdrop);
    border-color: transparent;
  }
}


