* {
  engine: adwaita;
  padding: 0;
  background-clip: padding-box;
  -GtkToolButton-icon-spacing: 4;
  -GtkTextView-error-underline-color: $error_color;
  -GtkPaned-handle-size: 5;

  -GtkCheckButton-indicator-size: 16;
  -GtkCheckMenuItem-indicator-size: 12;

  // The size for scrollbars. The slider is 2px smaller, but we keep it
  // up so that the whole area is sensitive to button presses for the
  // slider. The stepper button is larger in both directions, the slider
  // only in the width

  -GtkScrolledWindow-scrollbar-spacing: 0;
  -GtkScrolledWindow-scrollbars-within-bevel: 1;

  -GtkToolItemGroup-expander-size: 11;
  -GtkExpander-expander-size: 11;
  -GtkTreeView-expander-size: 11;

  -GtkTreeView-horizontal-separator: 4;

  -GtkMenu-horizontal-padding: 0;
  -GtkMenu-vertical-padding: 0;

  -GtkWidget-link-color: $link_color;
  -GtkWidget-visited-link-color: $link_color;

  -GtkWidget-focus-padding: 2;
  -GtkWidget-focus-line-width: 1;
  -GtkWindow-resize-grip-width: 0;
  -GtkWindow-resize-grip-height: 0;

  // We use the outline properties to signal the focus properties
  // to the adwaita engine: using real CSS properties is faster,
  // and we don't use any outlines for now.

  outline-color: transparentize($fg_color, 0.7);
  outline-style: dashed;
  outline-offset: -3px;
  outline-width: 1px;
  outline-radius: 2px;
}

/***************
 * Base States *
 ***************/

.background {
    color: $fg_color;
    background-color: $bg_color;
}

.background:backdrop {
    text-shadow: none;
    icon-shadow: none;

    color: lighten($fg_color,10%);
    background-color: $backdrop_bg_color;
}

/*
   These wildcard seems unavoidable, need to investigate.
   Wildcards are bad and troublesome, use them with care,
   or better, just don't.
   Everytime a wildcard is used a kitten dies, painfully.
*/



*:insensitive {
    -gtk-image-effect: dim;
}

*:hover {
    -gtk-image-effect: highlight;
}

.gtkstyle-fallback {
  background-color: $bg_color;
  color: $fg_color;
  &:prelight {
    background-color: lighten($bg_color, 10%);
    color: $fg_color;
  }
  &:active {
    background-color: darken($bg_color, 10%);
    color: $fg_color;
  }
  &:insensitive {
    background-color: $insensitive_bg_color;
    color: $insensitive_fg_color;
  }
  &:selected {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
  }
}

.view {
  background-color: $base_color;
  color: $fg_color;
  &:selected,
  &:selected:focus,
  &:selected:backdrop {
    @extend %selected_items;
  }
}

/*********************
 * Spinner Animation *
 *********************/

@keyframes spin {
    to { -gtk-icon-transform: rotate(1turn); }
}

.spinner {
  background-image: none;
  background-color: blue;
  opacity: 0; // non spinning spinner makes no sense
  -gtk-icon-source: -gtk-icontheme('process-working-symbolic');
  &:active {
    opacity: 1;
    animation: spin 1s linear infinite;
    &:insensitive {
      opacity: 0.5;
    }
  }
}

/****************
 * Text Entries *
 ****************/

.entry {
  padding: 4px;
  border-radius: 3px;
  transition: all 200ms ease-out;
  @include entry(normal);
  &:focus { @include entry(focus); }
  &:insensitive { @include entry(insensitive); }
  &:backdrop { @include entry(backdrop); }
  &:backdrop:insensitive { @include entry(backdrop-insensitive); }
  &:selected, &backdrop:selected {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
  }
  &:selected,
  &:selected:focus,
  &:selected:backdrop {
    @extend %selected_items;
  }
  &.progressbar {
    margin: 1px;
    border-radius: 0;
    border-width: 0 0 2px;
    border-color: $selected_bg_color;
    border-style: solid;
    background-image: none;
    background-color: transparent;
    box-shadow: none;
    &:backdrop { background-color: transparent; }
  }
  .linked & {
    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      &:dir(rtl) { border-right-style: none;}
    }
    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left-style: none;
      &:dir(rtl) { border-left-style: solid; }
    }
  }
}

/***********
 * Buttons *
 ***********/

.button {
  border-radius: 3px;
  transition: all 200ms ease-out;
  padding: 4px 6px;
  @include button(normal);
  &:hover {
    @include button(hover);
  }
  &:active {
    @include button(active);
  }
  &:backdrop {
    @include button(backdrop);
    &:active {
      @include button(backdrop-active);
    }
    &:insensitive {
      @include button(backdrop-insensitive);
    }
    &:insensitive:active {
      @include button(backdrop-insensitive-active);
    }
  }
  &:selected,
  &:selected:focus,
  &:selected:backdrop {
    @extend %selected_items;
  }
  &:insensitive {
    @include button(insensitive);
    &:active {
      @include button(insensitive-active);
    }
  }
  //overlay / OSD style
  .osd & {
    padding: 6px;
    border-width: 1px;
    @include button(osd);
    &:insensitive { @include button(osd-insensitive); }
    &:active { @include button(osd-active); }
    &:backdrop { @include button(osd-backdrop); }
  }
  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $selected_bg_color),
                              (destructive-action, $destructive_color) {
    &.#{$b_type} {
      @include button(normal,$b_color, white);
      &:hover {
        @include button(hover,$b_color, white);
      }
      &:active {
        @include button(active,$b_color, white);
      }
      &:backdrop {
        @include button(backdrop,$b_color);
        &:insensitive {
          @include button(backdrop-insensitive);
        }
      }
      &:insensitive {
        @include button(insensitive);
      }
    }
  }

  // linked buttons
  .linked &, .linked &:backdrop {
    border-radius: 0;
    border-left-style: none;
    &:dir(rtl) {
      border-right-style: none;
      border-left-style: solid
    };
    &:first-child {
      border-radius: 3px 0 0 3px;
      border-left-style: solid;
    }
    &:last-child {
      border-radius: 0 3px 3px 0;
      &:dir(rtl) { border-right-style: solid; }
    }
    &:only-child {
      border-radius: 3px;
      border-style: solid;
    }
  }

  // headerbar buttons
  .header-bar & {
    &.text-button {
      padding: 6px 8px 5px; // due to font metrics the image buttons
                            // are 1px shorter
    }
    &.image-button {
      padding: 8px;
    }
  }

  .primary-toolbar & { icon-shadow: none; } // tango icons don't need added shadows
}

/* menu/popover buttons */
.menuitem.button, {
  color: $fg_color;
  background-color: transparent;
  background-image: none;
  border-color: transparent;
  border-image: none;
  border-style: none;
  box-shadow: none;
  &:active,
  &:insensitive,
  &:active:insensitive {
    @extend .menuitem.button; // override generic .button:*
  }
  &:backdrop,
  &:hover:backdrop,
  &:insensitive:backdrop,
  &:active:insensitive:backdrop,
  &:active:backdrop,
  &:active:hover:backdrop,
  &:active:selected:backdrop {
      text-shadow: none;
      icon-shadow: none;
      color: $insensitive_fg_color;
      background-color: $insensitive_bg_color;
      background-image: none;
      border: none;
      box-shadow: none;
  }
}


GtkColorButton.button { padding: 4px; } // Uniform padding on the GtkColorButton.button

/*****************
 * GtkSpinButton *
 *****************/

.spinbutton {
  .button {
    background-image: none;
    border-width: 0 0 0 1px;
    border-color: transparentize($borders_color,0.7);
    border-radius: 0;
    box-shadow: none;
  //  padding-left: 6px;
  //  padding-right: 6px;
    &:dir(rtl) { border-width: 0 1px 0 0; }
    &:insensitive {
      color: transparentize($insensitive_fg_color,0.7);
    }
    &:active {
      box-shadow: inset 0 2px 3px -1px transparentize(black,0.8);
    }
    &:backdrop {
      border-color: transparentize($backdrop_borders_color,0.7);
    }
    &:backdrop:insensitive {
      color: transparentize($backdrop_insensitive_color,0.7);
      border-width: 0 0 0 1px; // It is needed or it gets overridden
      &:dir(rtl) { border-width: 0 1px 0 0; }
    }
  }
  &.vertical {
    .button {
      &:first-child {
        @extend %top_button;
        @include button(normal, $noedge: true);
        &:active {
          @extend %top_button;
          @include button(active, $noedge: true);
        }
        &:hover {
          @extend %top_button;
          @include button(hover, $noedge: true);
        }
        &:insensitive {
          @extend %top_button;
          @include button(insensitive, $noedge: true);
        }
      }
      &:last-child {
        @extend %bottom_button;
        @include button(normal);
        &:active {
          @extend %bottom_button;
          @include button(active);
        }
        &:hover {
          @extend %bottom_button;
          @include button(hover);
        }
        &:insensitive {
          @extend %bottom_button;
          @include button(insensitive);
        }
      }
      &:backdrop {
        @include button(backdrop);
      }
      &:backdrop:insensitive {
        @include button(backdrop-insensitive);
      }
    }
    &.entry {
      // we should remove the bottom edge hilight here, but seems
      // like buttons are on top of it so it doesn't show up
      border-radius: 0;
    }
    %top_button {
      border-radius: 3px 3px 0 0;
      border-bottom-width: 0;
    }
    %bottom_button {
      border-radius: 0 0 3px 3px;
      border-top-width: 0;
    }
  }
}

/**************
 * ComboBoxes *
 **************/
GtkComboBox {

  //FIXME padding issue
  padding: 0;

  -GtkComboBox-arrow-scaling: 0.5;
  -GtkComboBox-shadow-type: none;

  box-shadow: 0 1px $borders_edge;

  @include _button_text_shadow;

  &:insensitive {
    color: $insensitive_fg_color;
    text-shadow: none;
    icon-shadow: none;
  }
  &:backdrop {
    color: $backdrop_fg_color;
    text-shadow: none;
    icon-shadow: none;
  }
  &:backdrop:insensitive {
    color: $backdrop_insensitive_color;
  }
  .menuitem:active { text-shadow: none; }
  .separator {
    // always disable separators
    -GtkWidget-wide-separators: true;
    -GtkWidget-horizontal-separator: 0;
    -GtkWidget-vertical-separator: 0;
  }
  &.combobox-entry .entry {
    border-radius: 3px 0 0 3px;
    &:dir(rtl) {
      border-radius: 0 3px 3px 0;
    }
  }
  &.combobox-entry .button, &.combobox-entry .button:backdrop {
    // It is needed to specify the backdrop button or it gets overridden
    border-radius: 0 3px 3px 0;
    border-left-style: none;
    &:dir(rtl) {
      border-radius: 3px 0 0 3px;
      border-left-style: solid;
      border-right-style: none;
    }
  }
}

/************
 * Toolbars *
 ************/
.toolbar { //FIXME: why is all this being ignored?
  padding: 6px;
  background-color: $bg_color;
  &.osd {
    background-color: $osd_bg_color;
    border-radius: 6px;
    padding: 12px;
  }
  //searchbar & inline-toolbar
  &.inline-toolbar {
    @extend %inset-bar;
    border-width: 1px 0 0 0;
    padding: 6px;
  }
  &.search-bar {
    @extend %inset-bar;
    border-width: 0 0 1px;
    padding: 4px;
  }
}

%inset-bar {
  border-style: solid;
  border-color: $borders_color;
  $_bg: mix(black, $bg_color, 4%);
  background-color: $_bg;
  box-shadow: inset 0 1px 3px -2px mix($borders_color, $_bg, 60%);
}

.action-bar {
  padding: 4px;
}

/***************
 * Header bars *
 ***************/

.titlebar,
.header-bar {
  border-width: 0 0 1px;
  border-style: solid;
  border-color: $borders_color;
  border-radius: 7px 7px 0 0;

  background-color: transparent;
  background-image: linear-gradient(to bottom,
                                    lighten($bg_color,2%),
                                    darken($bg_color,5%));
  box-shadow: inset 0 -1px mix($borders_color, $bg_color, 30%), // bottom shade
              inset 0 1px $borders_edge; // top highlight
  padding: 6px;

  &:backdrop {
    border-color: $backdrop_borders_color;
    background-color: $bg_color;
    background-image: none;
    box-shadow: none;
  }

  .title {
    font: Bold;
    padding: 0px 12px;
  }
  .subtitle {
    font-size: 80%;
    padding: 0 12px;
  }
  .header-bar-separator,
  & > GtkBox > .separator.vertical {
    -GtkWidget-wide-separators: true;
    -GtkWidget-separator-width: 1px;
    border-width: 0 1px;
    border-image: linear-gradient(to bottom,
                                  transparentize($borders_color,1),
                                  $borders_color 30%,
                                  $borders_color 70%,
                                  transparentize($borders_color,1) 100%)
                  0 1 / 0 1px stretch; //FIXME use a proper color
    &:backdrop {
      border-image: linear-gradient(to bottom,
                                    transparentize($backdrop_borders_color,
                                                   0.5))
                    0 1 / 1px 1px;  //FIXME use a proper color
    }
  }
  &.selection-mode {
    color: darken($selected_bg_color, 15%);
    text-shadow: 0 1px transparentize(black, 0.5);
    background-image: linear-gradient(to bottom,
                                    lighten($selected_bg_color,5%),
                                    lighten($selected_bg_color,2%));
    box-shadow: inset 0 -1px mix($borders_color,$bg_color, 30%), //bottom shade
                inset 0 1px mix($borders_edge,$selected_bg_color, 50%); //top highlight

  }
  .tiled &, .maximized & {
    border-radius: 0; // squared corners when the window is max'd or tiled
  }
}

/**************
 * Tree Views *
 **************/

column-header { // FIXME: something better
  .button,
  .button:hover,
  .button:active,
  .button:backdrop {
    border-width: 0 1px 1px 0;
    border-color: transparent;
    box-shadow: none;
    border-radius: 0;
    border-image: linear-gradient(to top,
                              mix($borders_color, $base_color, 50%),
                              $base_color
                              ) 0 1 1 0;
    background-image: none;
    background-color: $base_color;
    color: mix($fg_color,$base_color,50%);
    font-weight: bold;
  }
}

/*********
 * Menus *
 *********/
.menubar {
  padding: 2px;
  .menuitem {  // menubar only
    background-color: $bg_color;
    padding: 4px 8px;
    border-radius: 0;
    &:hover, &:active {
      border-width: 0 0 3px;
      border-style: solid;
      border-color: $selected_bg_color;
    }
  }
}

.menu {
  .menuitem {  // menubar only
    background-color: $base_color;
    padding: 4px;
    border-radius: 0;
    &:hover {
      border: none;
      color: $selected_fg_color;
      background-color: $selected_bg_color;
    }
    &:active {
      border: none;
      color: $selected_fg_color;
      background-color: if($variant=='light', darken($selected_bg_color, 10%), darken($selected_bg_color, 5%));
    }
  }
  .separator { //just use whitespace
    color: transparent;
  }
}


/***************
 * Popovers   *
 ***************/

GtkPopover {
  border-radius: 5px;
  background-clip: border-box;
  background-color: $bg_color;

  border-color: $borders-color;
  border-width: 1px;
  border-style: solid;

  box-shadow: 0 2px 3px transparentize(black, 0.5);
  margin: 10px;
  padding: 2px;
  &:backdrop {
    box-shadow: none;
  }
  & > .list,
  & > .view,
  & > .toolbar {
    background-color: transparent;
  }
  .separator {
    font-size: 80%;
    font-weight: bold;
    color: mix($fg_color, $bg_color, 20%);
    text-shadow: none;
    background-color: transparent;
    icon-shadow: none;
    border: 0;
  }
  &.osd { //FIXME DOesn't work
    background-image: none;
    background-color: $osd_bg_color;
    color: $osd_fg_color;
  }
}

/*****************
 * Notebooks and *
 * Tabs          *
 *****************/

.notebook {
  // Through me you go to the grief wracked city;
  // Through me you go to everlasting pain;
  // Through me you go a pass among lost souls.
  // ...
  // Abandon all hope — Ye Who Enter Here
  padding: 0;
  background-color: $base_color;
  -GtkNotebook-initial-gap: 10;
  -GtkNotebook-arrow-spacing: 5;
  -GtkNotebook-tab-curvature: 0;
  -GtkNotebook-tab-overlap: 1;
  -GtkNotebook-has-tab-gap: false;
  -GtkWidget-focus-padding: 0;
  -GtkWidget-focus-line-width: 0;
  transition: all 200ms ease-out;
  &:backdrop {
    background-color: $backdrop_base_color;
  }
  &.frame {
    border: 1px solid $borders_color;
    // FIXME doesn't work
    &.top { border-top-width: 0; }
    &.bottom { border-bottom-width: 0; }
    &.right { border-right-width: 0; }
    &.left { border-left-width: 0; }
    &:backdrop { border-color: $backdrop_borders_color; }
  }
  &.header {
    // FIXME: double borders in some case, can't fix it w/o a class tho
    background-color: mix($bg_color, $borders_color, 60%);

    // this is the shading of the header behind the tabs
    &.frame {
      border: 1px solid $borders_color;
      &.top { border-bottom-width: 0; }
      &.bottom { border-top-width: 0; }
      &.right { border-left-width: 0; }
      &.left { border-right-width: 0; }
      &:backdrop { border-color: $backdrop_borders_color; }
    }

    $_header_shade: inset 0 2px 3px -1px transparentize(black, 0.85);

    &.top {
      box-shadow: $_header_shade,
                  inset 0 -1px $borders_color; // border
      &:backdrop { box-shadow: inset 0 -1px $backdrop_borders_color; }
    }
    &.bottom {
      box-shadow: $_header_shade,
                  inset 0 1px $borders_color;
      &:backdrop { box-shadow: inset 0 1px $backdrop_borders_color; }
    }
    &.right {
      box-shadow: $_header_shade,
                  inset 1px 0 $borders_color;
      &:backdrop { box-shadow: inset 1px 0 $backdrop_borders_color; }
    }
    &.left {
      box-shadow: $_header_shade,
                  inset -1px 0 $borders_color;
      &:backdrop { box-shadow: inset -1px 0 $backdrop_borders_color; }
    }
    &:backdrop {
      // same color as backdrop pushed button
      background-color: mix($backdrop_borders_color,$backdrop_bg_color, 35%);
      box-shadow: none;
    }
  }
  tab {
    border-width: 0;
    border-style: solid;
    border-color: transparent;
    background-color: transparent;

    $tab_indicator_size: 3px;
    //vertical tab sizing
    $vt_vpadding: 8px;
    $vt_hpadding: 20px;
    // horizontal tab sizing
    $ht_vpadding: 5px;
    $ht_hpadding: 20px;

    &.top, &.bottom { padding: $vt_vpadding $vt_hpadding; }
    &.left, &.right { padding: $ht_vpadding $ht_hpadding; }
    &.top {
      padding-bottom: ($vt_vpadding -$tab_indicator_size);
      border-bottom-width: $tab_indicator_size;
    }
    &.bottom {
      padding-top: ($vt_vpadding -$tab_indicator_size);
      border-top-width: $tab_indicator_size;
    }
    &.left {
      padding-right: ($ht_hpadding -$tab_indicator_size);
      border-right-width: $tab_indicator_size;
    }
    &.right {
      padding-left: ($ht_hpadding -$tab_indicator_size);
      border-left-width: $tab_indicator_size;
    }

    //here's the interesting stuff
    &:hover {
      border-color: $borders_color;
    }
    &:active, &:backdrop:active {
      border-color: $selected_bg_color;
    }
    &:backdrop {
      background-color: transparent;
      border-color: transparent;
    }
    // FIXME? we're considering just top reorderable tabs
    &.reorderable-page {
      &:active {
        // not sure this makes any difference, but let's do things
        // as good as possible
        padding: $vt_vpadding ($vt_hpadding)-1px
                 ($vt_vpadding)-1px ($vt_hpadding)-1px;
        border-width: 0 1px 1px 1px;
        background-color: transparentize($bg_color, .5);
        border-color: transparentize($borders_color,0.5);
        &:hover {
          background-color: transparentize($bg_color, 0.3);
        }
        &:backdrop, &:active:backdrop {
          border-color: $backdrop_borders_color;
          background-color: mix($backdrop_borders_color,$backdrop_bg_color, 8%);
        }
      }
    }
    GtkLabel { //tab text
      // this doesn't affect labels on reorderable pages, not css fault.
      font-weight: bold;
      color: $insensitive_fg_color;
      // prelight tab text
      &.prelight-page {
        color: mix($fg_color, $insensitive_fg_color, 50%);
        text-shadow: 0 1px transparentize(black,0.9);
      }
      // active tab text
      &.active-page {
        color: $fg_color;
        text-shadow: 0 1px transparentize(black,0.9);
        &:backdrop { color: $backdrop_fg_color; }
      }
      &:backdrop {
        color: mix($backdrop_fg_color, $backdrop_insensitive_color, 50%);
        text-shadow: none;
      }
    }
    .button { //tab close button
      border: 1px solid transparent; //avoid jumping around
      box-shadow: none; //FIXME glitch in the transition
      background-image: linear-gradient(to bottom, transparent);
      color: transparentize($fg_color, .5);
      &:hover { @include button(normal); }
      &:active { @include button(active); }
      & > GtkImage { // this is a hack which makes tabs grow
        padding: 3px;
      }
    }
  }
}

.notebook > .frame,
.notebook > .view { border: none; }

/**************
 * Scrollbars *
 **************/

.scrollbar {
  background-image: none;
  border-style: solid;
  -GtkRange-trough-border: 0;
  -GtkScrollbar-has-backward-stepper: false;
  -GtkScrollbar-has-forward-stepper: false;
  -GtkRange-slider-width: 13;
  -GtkScrollbar-min-slider-length: 42; /* minimum size for the slider. sadly can't be in '.slider' where it belongs */

  -GtkRange-stepper-spacing: 0;
  -GtkRange-trough-under-steppers: 1;
  .button {
    border: none;
  }
  &.trough {
    background-color: darken($bg_color, 5%);
    &:backdrop {
      background-color: transparent;
    }
  }
  &.slider {
    border-radius: 20px;
    border: 3px solid transparent; //margin :/
    background-color: mix($bg_color, $fg_color, 70%);
    &:backdrop, &:insensitive {
      background-color: mix($bg_color, $fg_color, 90%);
    }
    &:hover {
      background-color: mix($bg_color, $fg_color, 50%);
    }
    &:prelight:active {
      background-color: $selected_bg_color;
    }
    &.fine-tune {
      border-width: 5px;
      &:prelight:active {
        background-color: $selected_bg_color;
      }
    }
  }
}

/**********
 * Switch *
 **********/

GtkSwitch {
    -GtkSwitch-slider-width: 47px;
    font: bold condensed 9;
    outline-offset: -4px;
    &.trough {
      // similar to the .scale
      border-width: 1px;
      border-style: solid;
      border-radius: 3px;
      border-color: $borders_color;
      background-color: mix($bg_color,$borders_color,60%);
      box-shadow: inset 0 1px transparentize(black, 0.9),
                  $widget_edge;
      text-shadow: 0 1px transparentize(black, 0.9);
      &:active {
        color: white;
        border-color: $selected_borders_color;
        background-color: $selected_bg_color;
        box-shadow: $widget_edge;
        text-shadow: 0 0 2px 1px white;
      }
      &:insensitive {
        color: $insensitive_fg_color;
        border-color: $borders_color;
        background-color: $insensitive_bg_color;
        box-shadow: $widget_edge;
        text-shadow: none;
      }
      &:backdrop {
        color: $backdrop_fg_color;
        border-color: $backdrop_borders_color;
        background-color: $backdrop_bg_color;
        box-shadow: none;
        text-shadow: none;
      }
      &:backdrop:active {
        color: $backdrop_bg_color;
        border-color: $selected_bg_color;
        background-color: $selected_bg_color;
        box-shadow: none;
      }
      &:backdrop:insensitive {
        color: $backdrop_insensitive_color;
        border-color: $backdrop_insensitive_color;
      }
    }
    &.slider {
      border-radius: 3px;
      @include button(normal, $noedge: true);
      box-shadow: inset 0 1px if($variant=='light', white,
                                 transparentize(white,0.85)),
                  inset 0 -2px transparentize($bg_color,0.4),
                  inset 0 -1px mix($bg_color,$borders_color,50%);
      &:active { border: 1px solid $selected_borders_color; }
      &:insensitive { @include button(insensitive, $noedge: true); }
      &:backdrop { @include button(backdrop); }
      &:backdrop:active{ border-color: $selected_bg_color; }
      &:backdrop:insensitive { @include button(backdrop-insensitive); }
    }
}

/*************************
 * Check and Radio items *
 *************************/

// draw regular check and radio items using our PNG assets
// all assets are rendered from assets.svg. never add pngs directly

$asset_suffix: if($variant=='dark', '-dark', '');
@each $w,$a in ('check', 'checkbox'),
               ('radio','radio') {
  @each $s,$as in ('','-unchecked'),
                  (':hover', '-unchecked-hover'),
                  (':selected', '-unchecked-active'),
                  (':insensitive','-unchecked-insensitive'),
                  (':backdrop', '-unchecked-backdrop'),
                  (':backdrop:insensitive', '-unchecked-backdrop-insensitive'),
                  (':inconsistent', '-mixed'),
                  (':inconsistent:selected', '-mixed-active'),
                  (':inconsistent:backdrop', '-mixed-backdrop'),
                  (':inconsistent:insensitive', '-mixed-insensitive'),
                  (':inconsistent:insensitive:backdrop', '-mixed-backdrop-insensitive'),
                  (':active', '-checked'),
                  (':active:insensitive','-checked-insensitive'),
                  (':hover:active', '-checked-hover'),
                  (':active:selected', '-checked-active'),
                  (':backdrop:active', '-checked-backdrop'),
                  (':backdrop:active:insensitive', '-checked-backdrop-insensitive') {
    .#{$w}#{$s} {
      background-image: -gtk-scaled(url("assets/#{$a}#{$as}#{$asset_suffix}.png"),
                                    url("assets/#{$a}#{$as}#{$asset_suffix}@2.png"));
      background-repeat: no-repeat;
      background-position: center;
    }    
  }
  
  // menu and popover; FIXME: treeview
  GtkPopover GtkModelButton.button.#{$w},
  .menuitem.#{$w} {
    background-image: none;
    background-color: transparent;
    &:active { -gtk-icon-source: -gtk-icontheme('#{$a}-checked-symbolic'); color: $fg_color; }
    &:inconsistent { -gtk-icon-source: -gtk-icontheme('#{$a}-mixed-symbolic'); }
  }
  .menuitem.#{$w} {
    &:hover, &:active:hover { color: $selected_fg_color; }
  }
  GtkPopover GtkModelButton.button.#{$w} {
    &:hover, &:active:hover { color: $fg_color; }
  }
}

GtkCheckButton.text-button:selected { background-color: transparent; }

/************
 * GtkScale *
 ************/
.scale {
  -GtkScale-slider-length: 20;
  -GtkRange-slider-width: 20;
  -GtkRange-trough-border: 2;
  outline-offset: -9px;
  margin: 10px;
  &.slider {
    //FIXME: better gradient on the slider and hover state
    @include button(normal);
    border-radius: 50%;
    border-color: darken($borders_color,3%);
    box-shadow: inset 0 1px if($variant=='light', white,
                               transparentize(white,0.85)),
                inset 0 #{-2px} $bg_color,
                inset 0 #{-1px} mix($bg_color,$borders_color,50%);
    &:insensitive {
      background-image: linear-gradient(to bottom, $insensitive_bg_color);
      box-shadow: none;
    }
    &:backdrop {
      border-color: darken($backdrop_borders_color,3%);
      background-image: linear-gradient(to bottom, $backdrop_bg_color);
      box-shadow: none;
    }
    &:backdrop:insensitive { @include button(backdrop-insensitive); }
    //FIXME we need a better color for the dark variant
    &:active { border: 1px solid darken($selected_borders_color, 3%); }
    &.fine-tune:active { //FIXME: Lapo doesn;t like this
      border: 4px solid transparent; //margin
      box-shadow: inset 0 2px white,
                  inset 0 0 0 1px darken($selected_borders_color,3%); //border
    }
  }
  &.trough {
    border-width: 1px;
    border-style: solid;
    border-radius: 3px;
    border-color: $borders_color;
    background-color: mix($bg_color,$borders_color,60%);
    box-shadow: inset 1px 1px transparentize(black, 0.9),
                $widget_edge;
    &.highlight {
      border-color: $selected_borders_color;
      background-color: $selected_bg_color;
      box-shadow: $widget_edge;
      &:backdrop {
         border-color: $selected_bg_color;
         background-color: $selected_bg_color;
         box-shadow: none;
      }
    }
    &:insensitive, &.hilight:insensitive {
      border-color: $insensitive_borders_color;
      background-color: $insensitive_bg_color;
      box-shadow: $widget_edge;
    }
    &:backdrop {
      border-color: $backdrop_borders_color;
      background-color: mix($backdrop_bg_color,$borders_color);
      box-shadow: none;
    }
    &:backdrop:insensitive, .hilight:backdrop:insensitive {
      border-color: $backdrop_insensitive_color;
      background-color: $backdrop_bg_color;
    }
  }
}


/*****************
 * Progress bars *
 *****************/

//FIXME it's a wip ok?

GtkProgressBar {
    padding: 0;
    font-size: 83%;
    color: transparentize($fg_color, 0.6);
    &:backdrop {
      color: $backdrop_insensitive_color;
    }
}

// moving bit
.progressbar {
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  border-color: $selected_borders_color;
  background-color: $selected_bg_color;
  // I really prefer these flat w/o this shadow - Lapo
  box-shadow: inset 0 1px 0 transparentize($borders_edge,0.8);
  &.vertical {
    box-shadow: inset 1px 0 0 transparentize($borders_edge,0.8);
  }
  &:backdrop {
    border-color: $selected_bg_color;
    background-color: $selected_bg_color;
    box-shadow: none;
  }
}

// background
GtkProgressBar.trough {
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  border-color: $borders_color;
  background-color: mix($borders_color,$bg_color, 35%);
  box-shadow: inset 1px 1px transparentize(black, 0.9),
              $widget_edge;
  &:backdrop{
    border-color: $backdrop_borders_color;
    background-color: mix($backdrop_borders_color,$backdrop_bg_color, 35%);
    box-shadow: 0 1px transparentize(white,1);
  }
}

/****************
 * Level Bar *
 ****************/

GtkLevelBar {
    -GtkLevelBar-min-block-width: 34;
    -GtkLevelBar-min-block-height: 3;
}

GtkLevelBar.vertical {
    -GtkLevelBar-min-block-width: 3;
    -GtkLevelBar-min-block-height: 34;
}

.level-bar {
  &.trough {
    padding: 2px;
    border-width: 1px;
    border-style: solid;
    border-radius: 3px;
    border-color: $borders_color;
    box-shadow: inset 1px 1px transparentize(black, 0.9),
                $widget_edge;
    background-color: $base_color;
  }
  &.fill-block {
    border-width: 1px;
    border-style: solid;
    border-color: $selected_borders_color;
    background-color: $selected_bg_color;
    &.indicator-continuous {
      padding: 2px;
      border-radius: 2px;
    }
    &.indicator-discrete {
      &.horizontal { margin: 0 1px; }
      &.vertical { margin: 1px 0; }
    }
    &.level-high {
      border-color: darken($success_color,10%);
      background-color: $success_color;
    }
    &.level-low {
      border-color: darken($warning_color,10%);
      background-color: $warning_color;
    }
    &.empty-fill-block {
      background-color: transparent;
      border-color: transparentize($borders_color, 0.8);
    }
  }
}

// catch all extend :)

%selected_items {
  background-color: $selected_bg_color;
  color: $selected_fg_color;
}

/**********
 * Frames *
 **********/
.frame {
  border: 1px solid $borders_color;
  padding: 0;
  &:backdrop { border-color: mix($borders_color,$bg_color, 40%); }
}

GtkScrolledWindow {
  .frame { border-radius: 2px; }
  GtkViewport.frame { // avoid double borders when viewport inside scrolled window
    border-style: none;
  }
}

//vbox and hbox separators
.separator {
  // always disable separators
  // -GtkWidget-wide-separators: true;
  color: transparentize(black, 0.9);
}

/*********************
 * App Notifications *
 *********************/

.app-notification {
  border-width: 0 1px 1px;
  border-style: solid;
  border-color: $borders_color;
  border-radius: 0 0 6px 6px;
  background-image: linear-gradient(to bottom, mix(black, $bg_color, 6%) 5%,
                              mix(black, $bg_color, 4%));
  // FIXME no space for outer shadow : box-shadow: 0 1px 1px rgba(0,0,0,.5);
  padding: 0 4px;
  .button { padding: 6px; }
}

/************
 * Calendar *
 ***********/

GtkCalendar {
  border: 1px solid $borders_color;
  &.button {
    padding: 0 4px;
    color: mix($borders_color, $base_color, 50%);
    background-image: none;
    background-color: transparent;
  }
}

/***********
 * Dialogs *
 ***********/

GtkMessageDialog {
  // -GtkDialog-content-area-spacing:
  // -GtkDialog-action-area-spacing:
  -GtkDialog-button-spacing: 0;
  -GtkDialog-action-area-border: 0;
}

.dialog-action-area.linked {
  & .button {
    border-radius: 0;
    @include button(normal, $noedge: true);
    @extend %middle_button;
    &:hover {
      @include button(hover, $noedge: true);
      @extend %middle_button;
    }
    &:active {
      @include button(active, $noedge: true);
      @extend %middle_button;
    }
    &:insensitive {
      @include button(insensitive, $noedge: true);
      @extend %middle_button;
    }
    &:backdrop, &:backdrop:insensitive {
      @extend %middle_button;
    }
    &:last-child{ @extend %last_button; }
  }
  %middle_button {
    border-style: solid none none none;
  }
  %last_button { border-style: solid none none solid; }
}


/**********************
 * Window Decorations *
 *********************/

.window-frame {
  border-radius: 7px 7px 0 0;
  /* lamefun trick to get rounded borders regardless of CSD use */
  border-width: 0px;

  // this needs to be transparent
  // see bug #722563
  $_wm_border: if($variant=='light', transparentize(black, 0.8), transparentize(black, 0.4));
  box-shadow: 0 2px 10px 4px transparentize(black, 0.9),
              0 0 0 1px $_wm_border;

  /* this is used for the resize cursor area */
  margin: 10px;

  &:backdrop {
    box-shadow: 0 3px 6px 2px transparentize(black, 0.9),
                0 0 0 1px transparentize(black,0.7);
  }
  &.tiled {
    border-radius: 0;
  }
}

// Window Close button
.button.titlebutton {
  padding: 8px;
  border-color: transparent;
  background-image: none;
  transition-property: border, box-shadow, color;
  box-shadow: inset 0 1px transparentize(white,1),
              0 1px transparentize($borders_edge,1);
  &:hover { @include button(normal); }
  &:active { @include button(active); }
  &:backdrop {
    @include button(backdrop);
    border-color: transparent;
    transition-property: border, box-shadow, color;
  }
}


